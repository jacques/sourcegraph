#!/bin/sh
set -eu
# Script to generate Go models from TypeSpec, which defines REST APIs
# Ideally, this bash script should be replaced with a `bazel run` command
# but we keep it as a bash script for now to bootstrap our usage of TypeSpec.

# Check if openapi-generator is installed
if ! command -v openapi-generator >/dev/null 2>&1; then
  echo "openapi-generator not found, installing from Homebrew..."
  brew install openapi-generator
fi

# Check if main.tsp exists
MAIN_TSP="internal/openapi/main.tsp"
if [ ! -f "$MAIN_TSP" ]; then
  echo "Error: $MAIN_TSP not found. The working directory must be at the root of the repo."
  exit 1
fi

pnpm install
pnpm -C internal/openapi compile
OPENAPI_SPEC="internal/openapi/tsp-output/@typespec/openapi3/openapi.yaml"
OPENAPI_SPEC_TARGET="internal/openapi/api/openapi.yaml"
openapi-generator generate \
  -g go \
  -i $OPENAPI_SPEC \
  -o internal/openapi/goapi \
  -c internal/openapi/.openapi-generator/config.yml \
  --global-property models,modelDocs=false

echo "# Code generated by OpenAPI Generator - DO NOT EDIT" >$OPENAPI_SPEC_TARGET
cat $OPENAPI_SPEC >>$OPENAPI_SPEC_TARGET
echo "internal/openapi/goapi"
