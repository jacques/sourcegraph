# Code generated by OpenAPI Generator - DO NOT EDIT
openapi: 3.0.0
info:
  title: Sourcegraph
  version: 0.0.0
tags: []
paths:
  /.api/cody/search:
    get:
      operationId: CodyService_search
      parameters:
        - name: repos
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - name: query
          in: query
          required: true
          schema:
            type: string
        - name: codeResultsCount
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: textResultsCount
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodySearchResponse'
  /.api/llm/models:
    get:
      operationId: Models_list
      summary: Lists the currently available models, and provides basic information about each one such as the owner and availability.
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /.api/llm/models/{modelId}:
    get:
      operationId: Models_retrieveModel
      summary: Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    BlobInfo:
      type: object
      required:
        - path
        - repository
        - commit
        - url
      properties:
        path:
          type: string
        repository:
          $ref: '#/components/schemas/RepositoryInfo'
        commit:
          $ref: '#/components/schemas/CommitInfo'
        url:
          type: string
    CodySearchResponse:
      type: object
      required:
        - results
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/FileChunkContext'
    CommitInfo:
      type: object
      required:
        - oid
      properties:
        oid:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    FileChunkContext:
      type: object
      required:
        - blob
        - startLine
        - endLine
        - chunkContent
      properties:
        blob:
          $ref: '#/components/schemas/BlobInfo'
        startLine:
          type: integer
          format: int32
        endLine:
          type: integer
          format: int32
        chunkContent:
          type: string
    ListModelsResponse:
      type: object
      required:
        - object
        - data
      properties:
        object:
          type: string
          enum:
            - list
        data:
          type: array
          items:
            $ref: '#/components/schemas/Model'
    Model:
      type: object
      required:
        - id
        - object
        - created
        - owned_by
      properties:
        id:
          type: string
          description: The model identifier, which can be referenced in the API endpoints.
        object:
          type: string
          enum:
            - model
          description: The object type, which is always "model".
        created:
          type: integer
          format: int64
          description: The Unix timestamp (in seconds) when the model was created.
        owned_by:
          type: string
          description: The organization that owns the model.
      description: Describes an OpenAI model offering that can be used with the API.
    RepositoryInfo:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
