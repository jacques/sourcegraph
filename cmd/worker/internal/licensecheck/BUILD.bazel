load("//dev:go_mockgen.bzl", "go_mockgen")
load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "licensecheck",
    srcs = [
        "check.go",
        "job.go",
        "usercount.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/cmd/worker/internal/licensecheck",
    tags = [TAG_PLATFORM_SOURCE],
    visibility = ["//cmd/worker:__subpackages__"],
    deps = [
        "//cmd/worker/job",
        "//cmd/worker/shared/init/db",
        "//internal/conf",
        "//internal/database",
        "//internal/dotcom",
        "//internal/env",
        "//internal/goroutine",
        "//internal/httpcli",
        "//internal/license",
        "//internal/licensing",
        "//internal/observation",
        "//internal/redispool",
        "//internal/trace",
        "//lib/enterpriseportal/subscriptionlicensechecks/v1:subscriptionlicensechecks",
        "//lib/enterpriseportal/subscriptionlicensechecks/v1/v1connect",
        "//lib/errors",
        "@com_connectrpc_connect//:connect",
        "@com_github_derision_test_glock//:glock",
        "@com_github_gomodule_redigo//redis",
        "@com_github_sourcegraph_log//:log",
    ],
)

go_test(
    name = "licensecheck_test",
    timeout = "short",
    srcs = [
        "check_test.go",
        "mocks_test.go",
    ],
    embed = [":licensecheck"],
    tags = [
        TAG_PLATFORM_SOURCE,
        "requires-network",
    ],
    deps = [
        "//internal/conf",
        "//internal/database",
        "//internal/database/dbmocks",
        "//internal/license",
        "//internal/licensing",
        "//internal/rcache",
        "//lib/enterpriseportal/subscriptionlicensechecks/v1:subscriptionlicensechecks",
        "//lib/enterpriseportal/subscriptionlicensechecks/v1/v1connect",
        "//lib/errors",
        "//lib/pointers",
        "//schema",
        "@com_connectrpc_connect//:connect",
        "@com_github_derision_test_glock//:glock",
        "@com_github_derision_test_go_mockgen_v2//testutil/require",
        "@com_github_hexops_autogold_v2//:autogold",
        "@com_github_sourcegraph_log//logtest",
        "@com_github_stretchr_testify//require",
    ],
)

go_mockgen(
    name = "generate_mocks",
    out = "mocks_test.go",
    manifests = [
        "//:mockgen.yaml",
        "//:mockgen.test.yaml",
        "//:mockgen.temp.yaml",
    ],
    deps = ["//lib/enterpriseportal/subscriptionlicensechecks/v1/v1connect"],
)
